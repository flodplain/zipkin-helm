apiVersion: apps/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-zipkin-dependencies-gen
  labels:
    app: zipkin-dependencies-gen
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.dependencies.cron }}"
  selector:
    matchLabels:
      app: zipkin-dependencies-gen
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: zipkin-dependencies-gen
            release: {{ .Release.Name }}
        spec:
          restartPolicy: Never
          containers:
          - name: zipkin-dependencies-gen
            image: "openzipkin/zipkin-dependencies:{{ .Values.dependencies.imageVersion }}"
            env:
            - name: STORAGE_TYPE
              value: "{{ .Values.storageMethod }}"
            - name: ES_HOSTS
              value: "{{ .Values.elastic.host }}"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zipkin
                  key: elastic.password
            - name: ES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: zipkin
                  key: elastic.user
            - name: JAVA_OPTS
              value: "-XX:ConcGCThreads={{ .Values.node.cpus }} -XX:ParallelGCThreads={{ .Values.node.cpus }} -Djava.util.concurrent.ForkJoinPool.common.parallelism={{ .Values.node.cpus }} -Xms{{ .Values.dependencies.resources.javaOptsHeap }}M -Xmx{{ .Values.dependencies.resources.javaOptsHeap }}M -XX:+UseG1GC -server"
            resources:
              limits:
                cpu: "{{ .Values.dependencies.resources.cpuLimit }}"
                memory: "{{ .Values.dependencies.resources.ramMbLimits }}Mi"
              requests:
                cpu: "{{ .Values.dependencies.resources.cpuRequest }}"
                memory: "{{ .Values.dependencies.resources.ramMbRequests }}Mi"